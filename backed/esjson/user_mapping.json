# 如果需要删除已存在的索引
DELETE /user

# 创建user索引
PUT /user
{
"mappings": {
"properties": {
"id": {
"type": "long"
},
"userAccount": {
"type": "text",
"fields": {
"keyword": {
"type": "keyword",
"ignore_above": 256
}
},
"analyzer": "standard"
},
"userName": {
"type": "text",
"fields": {
"ik": {
"type": "text",
"analyzer": "ik_smart"
},
"keyword": {
"type": "keyword",
"ignore_above": 256
}
}
},
"userAvatar": {
"type": "keyword"
},
"userProfile": {
"type": "text",
"fields": {
"ik": {
"type": "text",
"analyzer": "ik_smart"
},
"keyword": {
"type": "keyword",
"ignore_above": 256
}
}
},
"userRole": {
"type": "keyword"
},
"editTime": {
"type": "date",
"format": "strict_date_time||strict_date_optional_time||epoch_millis"
},
"createTime": {
"type": "date",
"format": "strict_date_time||strict_date_optional_time||epoch_millis"
},
"updateTime": {
"type": "date",
"format": "strict_date_time||strict_date_optional_time||epoch_millis"
},
"isDelete": {
"type": "integer"
}
}
},
"settings": {
"analysis": {
"analyzer": {
"text_analyzer": {
"tokenizer": "ik_max_word",
"filter": ["lowercase"]
}
}
}
}
}

# 测试分词效果
POST /user/_analyze
{
"analyzer": "ik_max_word",
"text": "鹿梦的图片分享"
}

# 测试索引是否创建成功
GET /user/_mapping
