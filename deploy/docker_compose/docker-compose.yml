services:
  mysql:
    image: mysql:8.0.21
    container_name: mysql_service
    security_opt:
      - seccomp:unconfined
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Shanghai
    volumes:
      - /usr/local/mysql/conf:/etc/mysql/conf.d
      - /usr/local/mysql/data:/var/lib/mysql
      - /usr/local/mysql/init:/docker-entrypoint-initdb.d
      - /usr/local/mysql/log:/var/log/mysql
      - /usr/local/mysql/bin:/var/bin/mysql
      - /usr/local/mysql/lib:/var/lib
    networks:
      - yuemu-picture-backend_net
    healthcheck:
      start_period: 45s
      test: ["CMD", "true"]  # 总是返回成功，表示健康
      interval: 12s
      timeout: 7s
      retries: 12

  redis:
    image: redis:6.2.0
    container_name: redis_service
    ports:
      - "6379:6379"
    volumes:
      - /usr/local/redis/conf/redis.conf:/etc/redis/redis.conf
      - /usr/local/redis/data:/data
      - /usr/local/redis/logs:/logs
    command:
      - redis-server
      - /etc/redis/redis.conf
      - "--requirepass"
      - "${REDIS_PASSWORD}"
    networks:
      - yuemu-picture-backend_net
    healthcheck:
      test:
        - "CMD"
        - "redis-cli"
        - "-a"
        - "${REDIS_PASSWORD}"
        - "ping"
      interval: 7s
      timeout: 4s
      retries: 8
    depends_on:
      mysql:
        condition: service_healthy

  yuemu-picture-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: yuemu-picture-backend_service
    ports:
      - "8080:8080"
    image: yuemu-picture:latest  # 指定镜像名称
    networks:
      - yuemu-picture-backend_net
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    command:
      - /bin/bash
      - -c
      - |
        until mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "SELECT 1" > /dev/null 2>&1; do
          echo "Waiting for MySQL to be fully available..."
          sleep 5
        done
        until redis-cli -a${REDIS_PASSWORD} ping | grep -q PONG; do
          echo "Waiting for Redis to be fully available..."
          sleep 3
        done
        until curl -u elastic:${ELASTIC_PASSWORD} -sf http://elasticsearch:9200/ > /dev/null 2>&1; do
          echo "Waiting for Elasticsearch to be fully available..."
          sleep 10
        done
        java -jar yuemu-picture-backend.jar
    volumes:
      - /usr/local/projects/yuemu-picture/logs:/logs

  my-blog:
    build: 
      context: /usr/local/nginx/html/my-blog
      dockerfile: Dockerfile
    image: my-blog:latest
    container_name: my-blog
    networks:
      - yuemu-picture-backend_net
    ports:
      - "3000:3000"
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0

  nginx:
    image: nginx
    container_name: yuemu_nginx_service
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /usr/local/nginx/conf/yuemu-picture-backend/nginx.conf:/etc/nginx/nginx.conf
      - /usr/local/nginx/html/yuemu-picture-backend:/usr/share/nginx/html
      - /usr/local/nginx/logs/yuemu-picture-backend:/var/log/nginx
      - /usr/local/nginx/ssl:/etc/ssl
      - /usr/local/nginx/html/my-blog:/usr/share/nginx/html/blog  # 博客静态文件
    networks:
      - yuemu-picture-backend_net
    depends_on:
      yuemu-picture-backend:
        condition: service_started
      redis:
        condition: service_healthy
      my-blog:
        condition: service_started

  elasticsearch:
    image: elasticsearch:7.17.23
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=elasticsearch
      - ES_JAVA_OPTS=-Xms512m -Xmx1024m
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - /usr/local/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /usr/local/elasticsearch/data:/usr/share/elasticsearch/data
      - /usr/local/elasticsearch/logs:/usr/share/elasticsearch/logs
      - /usr/local/elasticsearch/plugins:/usr/share/elasticsearch/plugins
    networks:
      - yuemu-picture-backend_net
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "-u"
        - "elastic:${ELASTIC_PASSWORD}"
        - "-s"
        - "-f"
        - "http://localhost:9200/"
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 120s  # 增加启动延迟

networks:
  yuemu-picture-backend_net:
    name: yuemu-picture-backend_network